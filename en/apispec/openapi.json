{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "lcck37opnp6ql"
  },
  "info": {
    "title": "HDT API",
    "version": "1.0",
    "description": "The CDNetworks HDT API is a RESTful API that allows you to manage transports and retrieve reports.",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://ngapi.cdnetworks.com/hdt/v1"
    }
  ],
  "paths": {
    "/transport": {
      "get": {
        "summary": "Query transport list",
        "operationId": "get-transport",
        "description": "Returns the transport list.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items to return. The default value is 10."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "start",
            "description": "Starting position of the query in relation to the complete set of unpaginated items. The default value is 0."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "transportName",
            "description": "Search transports by name. Support fuzzy search."
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cName",
            "description": "Search by CNAME."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "accessDomain",
            "description": "Search by access domain."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "accessPort",
            "description": "Search by access port, an integer between 1 and 65535"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "targetDomain",
            "description": "Search by target domain."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "targetPort",
            "description": "Search by target port, an integer between 1 and 65535."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "Total transports"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/transport.transportData"
                          }
                        }
                      }
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": 1,
                      "content": {
                        "count": 2,
                        "data": [
                          {
                            "transportId": 1,
                            "transportCode": "www.test.com:1029",
                            "transportName": "www.test.com:1029",
                            "transportStatus": 1,
                            "targetDomain": "www.test.com",
                            "targetPort": 80,
                            "accessDomain": "www.test1029.com",
                            "accessPort": 80,
                            "cName": "www.test1029.com.506459.shland.com",
                            "useFtp": 0,
                            "applicationProtocol": "http",
                            "useUdp": 0,
                            "speedLimit": 0,
                            "concurrentLimit": 0,
                            "transportStrategy": "interact",
                            "carryClientIp": 0,
                            "ipVersion": 1,
                            "hasPsb": 0,
                            "hasIcp": 0,
                            "dedicatedIpService": 0
                          },
                          {
                            "transportId": 2,
                            "transportCode": "www.test2.com:1029",
                            "transportName": "www.test2.com:1029",
                            "transportStatus": 1,
                            "targetDomain": "www.test2.com",
                            "targetPort": 443,
                            "accessDomain": "www.test2.access.com",
                            "accessPort": 443,
                            "cName": "www.test2.access.com.shland.com",
                            "useFtp": 0,
                            "applicationProtocol": "sni",
                            "useUdp": 0,
                            "speedLimit": 0,
                            "concurrentLimit": 0,
                            "transportStrategy": "uniform",
                            "carryClientIp": 0,
                            "ipVersion": 1,
                            "hasPsb": 0,
                            "hasIcp": 0,
                            "dedicatedIpService": 0
                          }
                        ]
                      },
                      "message": "Success",
                      "code": "0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "AccessDenied"
                    },
                    "message": {
                      "type": "string",
                      "description": "Please enter valid credentials."
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "InternalError"
                    },
                    "message": {
                      "type": "string",
                      "description": "We encountered an internal error. Please try again."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transports"
        ]
      },
      "post": {
        "summary": "Create a transport",
        "operationId": "post-transport",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-Id": {
                "description": "A string automatically generated by the API server to identify each request.",
                "required": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": 1,
                      "message": "Success",
                      "code": "0"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "application/zip": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "application/EDIFACT": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "MissingArgument": {
                    "value": {
                      "code": "MissingArgument",
                      "message": "Required parameter is missing.",
                      "status": 0
                    }
                  },
                  "CNameAlreadyExists": {
                    "value": {
                      "code": "CNameAlreadyExists",
                      "message": "CNAME already exists.",
                      "status": 0
                    }
                  },
                  "TargetDomainAndPortAlreadyExist": {
                    "value": {
                      "code": "TargetDomainAndPortAlreadyExist",
                      "message": "The target domain and target port already exist.",
                      "status": 0
                    }
                  },
                  "InvalidCNameSuffix": {
                    "value": {
                      "code": "InvalidCNameSuffix",
                      "message": "Invalid CNAME suffix.",
                      "status": 0
                    }
                  },
                  "InvalidAccessDomain": {
                    "value": {
                      "code": "InvalidAccessDomain",
                      "message": "The value of field ‘accessDomain’ is invalid.",
                      "status": 0
                    }
                  },
                  "InvalidApplicationProtocol": {
                    "value": {
                      "code": "InvalidApplicationProtocol",
                      "message": "The value of field ‘applicationProtocol’ is invalid.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "NoSuchTransportType": {
                    "value": {
                      "code": "NoSuchTransportType",
                      "message": "The specified transport type does not exist.",
                      "status": 0
                    }
                  },
                  "DistributeConfigFailed": {
                    "value": {
                      "code": "DistributeConfigFailed",
                      "message": "HDT system error. Please contact HDT support team.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "InternalError"
                    },
                    "message": {
                      "type": "string",
                      "description": "We encountered an internal error. Please try again."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a transport and associate it with the calling customer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transportName": {
                    "$ref": "#/components/schemas/transport.name"
                  },
                  "targetDomain": {
                    "$ref": "#/components/schemas/transport.targetDomain"
                  },
                  "targetPort": {
                    "$ref": "#/components/schemas/transport.targetPort"
                  },
                  "accessDomain": {
                    "$ref": "#/components/schemas/transport.accessDomain"
                  },
                  "accessPort": {
                    "$ref": "#/components/schemas/transport.accessPort"
                  },
                  "cName": {
                    "$ref": "#/components/schemas/transport.cName"
                  },
                  "applicationProtocol": {
                    "$ref": "#/components/schemas/transport.applicationProtocol"
                  },
                  "useFtp": {
                    "$ref": "#/components/schemas/transport.useFtp"
                  },
                  "useUdp": {
                    "$ref": "#/components/schemas/transport.useUdp"
                  },
                  "hasPSB": {
                    "$ref": "#/components/schemas/transport.hasPsb"
                  },
                  "transportStatus": {
                    "$ref": "#/components/schemas/transport.status"
                  },
                  "ipVersion": {
                    "$ref": "#/components/schemas/transport.ipVersion"
                  },
                  "speedLimit": {
                    "$ref": "#/components/schemas/transport.speedLimit"
                  },
                  "concurrentLimit": {
                    "$ref": "#/components/schemas/transport.concurrentLimit"
                  },
                  "transportStrategy": {
                    "$ref": "#/components/schemas/transport.transportStrategy"
                  },
                  "carryClientIp": {
                    "$ref": "#/components/schemas/transport.carryClientIp"
                  },
                  "ipWhiteList": {
                    "$ref": "#/components/schemas/transport.ipWhiteList"
                  },
                  "ipBlackList": {
                    "$ref": "#/components/schemas/transport.ipBlackList"
                  },
                  "dedicatedIpService": {
                    "$ref": "#/components/schemas/transport.dedicatedIpService"
                  },
                  "comments": {
                    "$ref": "#/components/schemas/transport.comments"
                  }
                },
                "required": [
                  "targetDomain",
                  "targetPort",
                  "accessDomain",
                  "applicationProtocol"
                ]
              },
              "examples": {
                "Create IP-Port transport": {
                  "value": {
                    "transportName": "string",
                    "targetDomain": "example.target.com",
                    "targetPort": 80,
                    "accessDomain": "example.access.com",
                    "accessPort": 80,
                    "applicationProtocol": "http",
                    "cName": "example.com",
                    "useFtp": 0,
                    "useUdp": 0,
                    "hasPsb": 0,
                    "ipVersion": 1
                  }
                }
              }
            }
          },
          "description": "Create an ip-port transport."
        },
        "tags": [
          "Transports"
        ]
      }
    },
    "/transport/{transport-id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "transport-id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Query a transport",
        "tags": [
          "Transports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "content": {
                      "$ref": "#/components/schemas/transport.transportData"
                    }
                  }
                },
                "examples": {
                  "http application": {
                    "value": {
                      "code": "0",
                      "content": {
                        "transportId": 3,
                        "transportCode": "test-2.domain.com:1080",
                        "transportType": "ipport",
                        "transportName": "test-2.domain.com:1080",
                        "targetDomain": "test-2.domain.com",
                        "targetPort": 1080,
                        "useFtp": 0,
                        "cName": "access.cname.com",
                        "accessPort": 80,
                        "useUdp": 0,
                        "applicationProtocol": "http",
                        "accessDomain": "access.domain.com,access1.domain.com",
                        "status": 1,
                        "speedLimit": 0,
                        "concurrentLimit": 0,
                        "transportStrategy": "topspeed",
                        "ipWhiteList": "192.168.1.0/26;192.168.10.1-192.168.10.100",
                        "comments": ""
                      },
                      "message": "Success",
                      "status": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "AccessDenied"
                    },
                    "message": {
                      "type": "string",
                      "description": "Please enter valid credentials."
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "NoSuchTransportType"
                    },
                    "message": {
                      "type": "string",
                      "description": "The specified transport type does not exist."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "NoSuchTransportType": {
                    "value": {
                      "code": "NoSuchTransportType",
                      "message": "The specified transport type does not exist.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "InternalError"
                    },
                    "message": {
                      "type": "string",
                      "description": "We encountered an internal error. Please try again."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-transport-transportId",
        "description": "Returns the information of a transport by transport-Id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      },
      "put": {
        "summary": "Modify a transport",
        "operationId": "put-transport-transportId",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": 1,
                      "message": "Success",
                      "code": "0"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "application/zip": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "application/EDIFACT": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "MissingArgument": {
                    "value": {
                      "code": "MissingArgument",
                      "message": "Required parameter is missing.",
                      "status": 0
                    }
                  },
                  "InvalidArgument": {
                    "value": {
                      "code": "InvalidArgument",
                      "message": "There is a problem with a parameter name or value.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials.",
                      "status": 0
                    }
                  },
                  "ResourceNoAccess": {
                    "value": {
                      "code": "ResourceNoAccess",
                      "message": "A read-only customer cannot modify resources.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "NoSuchTransportId": {
                    "value": {
                      "code": "NoSuchTransportId",
                      "message": "The specified transport id does not exist.",
                      "status": 0
                    }
                  },
                  "DistributeConfigFailed": {
                    "value": {
                      "code": "DistributeConfigFailed",
                      "message": "HDT system error. Please contact HDT support team.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "InternalError"
                    },
                    "message": {
                      "type": "string",
                      "description": "We encountered an internal error. Please try again."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Modify a transport according to transport ID. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transportName": {
                    "$ref": "#/components/schemas/transport.name"
                  },
                  "targetDomain": {
                    "$ref": "#/components/schemas/transport.targetDomain"
                  },
                  "targetPort": {
                    "$ref": "#/components/schemas/transport.targetPort"
                  },
                  "useFtp": {
                    "$ref": "#/components/schemas/transport.useFtp"
                  },
                  "cName    ": {
                    "$ref": "#/components/schemas/transport.cName"
                  },
                  "accessDomain": {
                    "$ref": "#/components/schemas/transport.accessDomain"
                  },
                  "accessPort": {
                    "$ref": "#/components/schemas/transport.accessPort"
                  },
                  "applicationProtocol": {
                    "$ref": "#/components/schemas/transport.applicationProtocol"
                  },
                  "ipWhiteList": {
                    "$ref": "#/components/schemas/transport.ipWhiteList"
                  },
                  "ipBlackList": {
                    "$ref": "#/components/schemas/transport.ipBlackList"
                  },
                  "useUdp": {
                    "$ref": "#/components/schemas/transport.useUdp"
                  },
                  "transportStatus": {
                    "$ref": "#/components/schemas/transport.status"
                  },
                  "comments": {
                    "$ref": "#/components/schemas/transport.comments"
                  },
                  "speedLimit": {
                    "$ref": "#/components/schemas/transport.speedLimit"
                  },
                  "concurrentLimit": {
                    "$ref": "#/components/schemas/transport.concurrentLimit"
                  },
                  "transportStrategy": {
                    "$ref": "#/components/schemas/transport.transportStrategy"
                  },
                  "carryClientIp": {
                    "$ref": "#/components/schemas/transport.carryClientIp"
                  },
                  "ipVersion": {
                    "$ref": "#/components/schemas/transport.ipVersion"
                  }
                }
              },
              "examples": {
                "http application": {
                  "value": {
                    "transportId": 3,
                    "transportCode": "test-2.domain.com:80",
                    "transportType": "ipport",
                    "transportName": "test-2.domain.com:80",
                    "targetDomain": "test-2.domain.com",
                    "targetPort": 80,
                    "useFtp": 0,
                    "cName": "access.cname.com",
                    "accessPort": 80,
                    "useUdp": 0,
                    "applicationProtocol": "http",
                    "accessDomain": "access.domain.com",
                    "status": 1,
                    "speedLimit": 0,
                    "concurrentLimit": 0,
                    "transportStrategy": "topspeed",
                    "ipWhiteList": "192.168.1.0/26;192.168.10.1-192.168.10.100",
                    "comments": ""
                  }
                }
              }
            }
          },
          "description": "Modify a transport."
        },
        "tags": [
          "Transports"
        ]
      },
      "delete": {
        "summary": "Delete a transport",
        "operationId": "delete-transport-transportId",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": 1,
                      "message": "Success",
                      "code": "0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials.",
                      "status": 0
                    }
                  },
                  "ResourceNoAccess": {
                    "value": {
                      "code": "ResourceNoAccess",
                      "message": "A read-only customer cannot modify resources.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "NoSuchTransportId": {
                    "value": {
                      "code": "NoSuchTransportId",
                      "message": "The specified transport id  does not exist.",
                      "status": 0
                    }
                  },
                  "DistributeConfigFailed": {
                    "value": {
                      "code": "DistributeConfigFailed",
                      "message": "HDT system error. Please contact HDT support team.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "InternalError"
                    },
                    "message": {
                      "type": "string",
                      "description": "We encountered an internal error. Please try again."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete a transport by the transport ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "tags": [
          "Transports"
        ]
      }
    },
    "/transport/{transport-id}/history": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "transport-id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Query history of a transport",
        "tags": [
          "Transports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "code": {
                      "$ref": "#/components/schemas/transport.code"
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "deployId": {
                                "$ref": "#/components/schemas/transport.deployId"
                              },
                              "deployDate": {
                                "type": "string"
                              },
                              "transportCode": {
                                "$ref": "#/components/schemas/transport.code"
                              },
                              "transportType": {
                                "$ref": "#/components/schemas/transport.type"
                              },
                              "transportName": {
                                "$ref": "#/components/schemas/transport.name"
                              },
                              "targetDomain": {
                                "$ref": "#/components/schemas/transport.targetDomain"
                              },
                              "targetPort": {
                                "$ref": "#/components/schemas/transport.targetPort"
                              },
                              "useFtp": {
                                "$ref": "#/components/schemas/transport.useFtp"
                              },
                              "cName": {
                                "$ref": "#/components/schemas/transport.cName"
                              },
                              "accessPort": {
                                "$ref": "#/components/schemas/transport.accessPort"
                              },
                              "useUdp": {
                                "$ref": "#/components/schemas/transport.useUdp"
                              },
                              "applicationProtocol": {
                                "$ref": "#/components/schemas/transport.applicationProtocol"
                              },
                              "accessDomain": {
                                "$ref": "#/components/schemas/transport.accessDomain"
                              },
                              "speedLimit": {
                                "$ref": "#/components/schemas/transport.speedLimit"
                              },
                              "concurrentLimit": {
                                "$ref": "#/components/schemas/transport.concurrentLimit"
                              },
                              "transportStrategy": {
                                "$ref": "#/components/schemas/transport.transportStrategy"
                              },
                              "ipWhiteList": {
                                "$ref": "#/components/schemas/transport.ipWhiteList"
                              },
                              "hasICP": {
                                "$ref": "#/components/schemas/transport.hasIcp"
                              },
                              "hasPSB": {
                                "$ref": "#/components/schemas/transport.hasPsb"
                              },
                              "dedicatedIpService": {
                                "$ref": "#/components/schemas/transport.dedicatedIpService"
                              },
                              "ipVersion": {
                                "$ref": "#/components/schemas/transport.ipVersion"
                              },
                              "shieldHost": {
                                "$ref": "#/components/schemas/transport.shieldHost"
                              },
                              "carryClientIp": {
                                "$ref": "#/components/schemas/transport.carryClientIp"
                              },
                              "comments": {
                                "$ref": "#/components/schemas/transport.comments"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Ipport": {
                    "value": {
                      "code": "0",
                      "content": {
                        "data": [
                          {
                            "deployId": 1,
                            "accessDomain": "0202-1.access.com",
                            "accessPort": 80,
                            "apiRequestId": "8UqsuWcV",
                            "cName": "0202-1.access.com.506561.shland.com",
                            "carryClientIp": 0,
                            "concurrentLimit": 0,
                            "deployDate": "2020-01-01 12:01:23",
                            "ipBlackList": "",
                            "ipVersion": 1,
                            "ipWhiteList": "",
                            "speedLimit": 0,
                            "targetDomain": "0202-1.target.com",
                            "targetPort": 80,
                            "transportCode": "0202-1.target.com:80",
                            "transportId": 506561,
                            "transportName": "0202-1.target.com:80",
                            "transportStatus": 1,
                            "transportStrategy": "topspeed",
                            "transportStrategyNam": "Default",
                            "useFtp": 0,
                            "applicationProtocol": "http",
                            "useUdp": 0,
                            "hasIcp": 0,
                            "hasPsb": 0
                          }
                        ],
                        "count": 1
                      },
                      "message": "Success",
                      "status": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "NoSuchTransportId"
                    },
                    "message": {
                      "type": "string",
                      "description": "The specified transport Id does not exist."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "NoSuchTransportId": {
                    "value": {
                      "code": "NoSuchTransportId",
                      "message": "The specified transport id does not exist.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "InternalError"
                    },
                    "message": {
                      "type": "string",
                      "description": "We encountered an internal error. Please try again."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-transport-history-by-transportId",
        "description": "Returns a transport’s history configuration information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items to return. The default value is 10."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "start",
            "description": "Starting position of the query in relation to the complete set of unpaginated items. The default value is 0."
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/report/flow": {
      "get": {
        "summary": "Query flow report",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "content": {
                      "$ref": "#/components/schemas/report.flowReport"
                    },
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "0",
                      "content": {
                        "records-count": 24,
                        "download-summary": 18519850119,
                        "flow-data": [
                          {
                            "download": 242202979,
                            "upload": 41775682,
                            "timestamp": "2021-02-01T00:00:00"
                          },
                          {
                            "download": 434976489,
                            "upload": 53327750,
                            "timestamp": "2021-02-01T01:00:00"
                          },
                          {
                            "download": 262619320,
                            "upload": 46792105,
                            "timestamp": "2021-02-01T02:00:00"
                          },
                          {
                            "download": 271591374,
                            "upload": 40887864,
                            "timestamp": "2021-02-01T03:00:00"
                          },
                          {
                            "download": 191100146,
                            "upload": 37105263,
                            "timestamp": "2021-02-01T04:00:00"
                          },
                          {
                            "download": 276380284,
                            "upload": 43468523,
                            "timestamp": "2021-02-01T05:00:00"
                          },
                          {
                            "download": 312642389,
                            "upload": 40554045,
                            "timestamp": "2021-02-01T06:00:00"
                          },
                          {
                            "download": 371711566,
                            "upload": 42653678,
                            "timestamp": "2021-02-01T07:00:00"
                          },
                          {
                            "download": 206700554,
                            "upload": 34305845,
                            "timestamp": "2021-02-01T08:00:00"
                          },
                          {
                            "download": 236087512,
                            "upload": 42197590,
                            "timestamp": "2021-02-01T09:00:00"
                          },
                          {
                            "download": 281101998,
                            "upload": 51045937,
                            "timestamp": "2021-02-01T10:00:00"
                          },
                          {
                            "download": 345577080,
                            "upload": 68093439,
                            "timestamp": "2021-02-01T11:00:00"
                          },
                          {
                            "download": 294388314,
                            "upload": 55829406,
                            "timestamp": "2021-02-01T12:00:00"
                          },
                          {
                            "download": 510627818,
                            "upload": 67908071,
                            "timestamp": "2021-02-01T13:00:00"
                          },
                          {
                            "download": 1160562771,
                            "upload": 145654807,
                            "timestamp": "2021-02-01T14:00:00"
                          },
                          {
                            "download": 1877963150,
                            "upload": 204881040,
                            "timestamp": "2021-02-01T15:00:00"
                          },
                          {
                            "download": 1720644941,
                            "upload": 234140548,
                            "timestamp": "2021-02-01T16:00:00"
                          },
                          {
                            "download": 1368231195,
                            "upload": 243603839,
                            "timestamp": "2021-02-01T17:00:00"
                          },
                          {
                            "download": 1333455796,
                            "upload": 262665569,
                            "timestamp": "2021-02-01T18:00:00"
                          },
                          {
                            "download": 1153213974,
                            "upload": 264971687,
                            "timestamp": "2021-02-01T19:00:00"
                          },
                          {
                            "download": 1785975896,
                            "upload": 235060258,
                            "timestamp": "2021-02-01T20:00:00"
                          },
                          {
                            "download": 1520091740,
                            "upload": 294514865,
                            "timestamp": "2021-02-01T21:00:00"
                          },
                          {
                            "download": 1197156838,
                            "upload": 262305327,
                            "timestamp": "2021-02-01T22:00:00"
                          },
                          {
                            "download": 1164845995,
                            "upload": 252102680,
                            "timestamp": "2021-02-01T23:00:00"
                          }
                        ],
                        "upload-summary": 3065845818
                      },
                      "message": "Success",
                      "status": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "description": "A string automatically generated by the API server to identify each request.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "InvalidDatePeriod": {
                    "value": {
                      "code": "InvalidDatePeriod",
                      "message": "The date specified is invalid.",
                      "status": 0
                    }
                  },
                  "MissingArgument": {
                    "value": {
                      "code": "MissingArgument",
                      "message": "Required parameter is missing.",
                      "status": 0
                    }
                  },
                  "TimeRangeTooLarge": {
                    "value": {
                      "code": "TimeRangeTooLarge",
                      "message": "The date range should be no more than 7 days when querying 1 minute intervals.\nThe date range should be no more than one month when querying 5 minute intervals.\nThe date range should be no more than one year when querying hourly, daily, or monthly intervals.",
                      "status": 0
                    }
                  },
                  "InvalidArgument": {
                    "value": {
                      "code": "InvalidArgument",
                      "message": "There is a problem with a parameter name or value.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "AccessDenied"
                    },
                    "message": {
                      "type": "string",
                      "description": "Please enter valid credentials."
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-report-flow",
        "description": "Returns the total traffic volume in bytes for all of the transports. Parameters allow you to specify a time period and an interval type.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/datefrom"
          },
          {
            "$ref": "#/components/parameters/dateto"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "interval",
            "description": "Granularity of time. Can be \"oneminute\", \"fiveminutes\", \"hourly\", \"daily\", or \"monthly\".\nIf the time range is no more than one day, the default value is \"oneminute\";\nIf the time range is more than one day but less than or equal to one week, the default value is \"fiveminutes\";\nIf the time range is more than one week but less than or equal to one month, the default value is \"hourly\";\nIf the time range is more than one month, the default value is \"daily\"; \nRestriction:\n1.\tOne minute - Maximum time range is 7 days\n2.\t5 minutes - Maximum time range is 1 month(31d)\n3.\tHourly, Daily, Monthly - Maximum time range is 1 year(366d)"
          },
          {
            "$ref": "#/components/parameters/timezone"
          },
          {
            "$ref": "#/components/parameters/accessDomain"
          },
          {
            "$ref": "#/components/parameters/transport"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/scope"
          }
        ]
      }
    },
    "/report/summary/requests": {
      "get": {
        "summary": "Query Summary of Requests",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requestsSummary": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "startTime": {
                          "type": "string"
                        },
                        "dataName": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "endTime": {
                          "type": "string"
                        },
                        "dataUnit": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "requestsSummary": {
                        "data": [
                          3576,
                          3575
                        ],
                        "startTime": "2023-09-15T00:00:00Z",
                        "dataName": [
                          "totalRequests",
                          "succRequests"
                        ],
                        "endTime": "2023-09-15T00:15:00Z",
                        "dataUnit": "count"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "requestsSummary": {
                        "data": [
                          3576,
                          3575
                        ],
                        "startTime": "2023-09-15T00:00:00Z",
                        "dataName": [
                          "totalRequests",
                          "succRequests"
                        ],
                        "endTime": "2023-09-15T00:15:00Z",
                        "dataUnit": "count"
                      }
                    }
                  },
                  "Example 2": {
                    "value": {
                      "requestsSummary": {
                        "data": [
                          0
                        ],
                        "startTime": "string",
                        "dataName": [
                          "string"
                        ],
                        "endTime": "string",
                        "dataUnit": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "description": "A string automatically generated by the API server to identify each request.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "InvalidDatePeriod": {
                    "value": {
                      "code": "InvalidDatePeriod",
                      "message": "The date specified is invalid.",
                      "status": 0
                    }
                  },
                  "MissingArgument": {
                    "value": {
                      "code": "MissingArgument",
                      "message": "Required parameter is missing.",
                      "status": 0
                    }
                  },
                  "TimeRangeTooLarge": {
                    "value": {
                      "code": "TimeRangeTooLarge",
                      "message": "The date range should be no more than 7 days when querying 1 minute intervals.\nThe date range should be no more than one month when querying 5 minute intervals.\nThe date range should be no more than one year when querying hourly, daily, or monthly intervals.",
                      "status": 0
                    }
                  },
                  "InvalidArgument": {
                    "value": {
                      "code": "InvalidArgument",
                      "message": "There is a problem with a parameter name or value.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "AccessDenied"
                    },
                    "message": {
                      "type": "string",
                      "description": "Please enter valid credentials."
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-report-summary-requests",
        "description": "Returns the requests summary data of specified time-period based on the query conditions. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/datefrom"
          },
          {
            "$ref": "#/components/parameters/dateto"
          },
          {
            "$ref": "#/components/parameters/accessDomain"
          },
          {
            "$ref": "#/components/parameters/transport"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/customerName"
          },
          {
            "$ref": "#/components/parameters/scope"
          }
        ]
      },
      "parameters": []
    },
    "/report/summary/volume": {
      "get": {
        "summary": "Query Summary of Volume",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "volumeSummary": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "startTime": {
                          "type": "string"
                        },
                        "dataName": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "endTime": {
                          "type": "string"
                        },
                        "dataUnit": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "volumeSummary": {
                        "data": [
                          140102786,
                          11738478,
                          128364308
                        ],
                        "startTime": "2023-09-15T00:00:00Z",
                        "dataName": [
                          "totalVolume",
                          "uploadVolume",
                          "downloadVolume"
                        ],
                        "endTime": "2023-09-15T00:15:00Z",
                        "dataUnit": "byte"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "volumeSummary": {
                        "data": [
                          140102786,
                          11738478,
                          128364308
                        ],
                        "startTime": "2023-09-15T00:00:00Z",
                        "dataName": [
                          "totalVolume",
                          "uploadVolume",
                          "downloadVolume"
                        ],
                        "endTime": "2023-09-15T00:15:00Z",
                        "dataUnit": "byte"
                      }
                    }
                  },
                  "Example 2": {
                    "value": {
                      "volumeSummary": {
                        "groups": [
                          {
                            "data": [
                              1906834,
                              479743,
                              1427091
                            ],
                            "group": "a1.com"
                          },
                          {
                            "data": [
                              851,
                              851,
                              0
                            ],
                            "group": "a1.cn"
                          }
                        ],
                        "startTime": "2023-09-15T00:00:00Z",
                        "dataName": [
                          "totalVolume",
                          "uploadVolume",
                          "downloadVolume"
                        ],
                        "endTime": "2023-09-15T00:15:00Z",
                        "groupBy": "accessDomain",
                        "dataUnit": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "description": "A string automatically generated by the API server to identify each request.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "InvalidDatePeriod": {
                    "value": {
                      "code": "InvalidDatePeriod",
                      "message": "The date specified is invalid.",
                      "status": 0
                    }
                  },
                  "MissingArgument": {
                    "value": {
                      "code": "MissingArgument",
                      "message": "Required parameter is missing.",
                      "status": 0
                    }
                  },
                  "TimeRangeTooLarge": {
                    "value": {
                      "code": "TimeRangeTooLarge",
                      "message": "The date range should be no more than 7 days when querying 1 minute intervals.\nThe date range should be no more than one month when querying 5 minute intervals.\nThe date range should be no more than one year when querying hourly, daily, or monthly intervals.",
                      "status": 0
                    }
                  },
                  "InvalidArgument": {
                    "value": {
                      "code": "InvalidArgument",
                      "message": "There is a problem with a parameter name or value.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "AccessDenied"
                    },
                    "message": {
                      "type": "string",
                      "description": "Please enter valid credentials."
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-report-summary-volume",
        "description": "Returns the requests summary data of specified time-period based on the query conditions. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/datefrom"
          },
          {
            "$ref": "#/components/parameters/dateto"
          },
          {
            "$ref": "#/components/parameters/accessDomain"
          },
          {
            "$ref": "#/components/parameters/transport"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "$ref": "#/components/parameters/customerName"
          },
          {
            "$ref": "#/components/parameters/scope"
          }
        ]
      },
      "parameters": []
    },
    "/report/requests": {
      "get": {
        "summary": "Query requests report",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "content": {
                      "$ref": "#/components/schemas/report.requestsReport"
                    },
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "0",
                      "content": {
                        "records-count": 2,
                        "requests-data": [
                          {
                            "total": 971421,
                            "success": 971420,
                            "timestamp": "2021-02-01T00:00:00"
                          },
                          {
                            "total": 1002640,
                            "success": 1002609,
                            "timestamp": "2021-02-02T00:00:00"
                          }
                        ],
                        "success-summary": 1974029,
                        "total-summary": 1974061
                      },
                      "message": "Success",
                      "status": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "description": "A string automatically generated by the API server to identify each request.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "InvalidDatePeriod": {
                    "value": {
                      "code": "InvalidDatePeriod",
                      "message": "The date specified is invalid.",
                      "status": 0
                    }
                  },
                  "MissingArgument": {
                    "value": {
                      "code": "MissingArgument",
                      "message": "Required parameter is missing.",
                      "status": 0
                    }
                  },
                  "TimeRangeTooLarge": {
                    "value": {
                      "code": "TimeRangeTooLarge",
                      "message": "The date range should be no more than 7 days when querying 1 minute intervals.\nThe date range should be no more than one month when querying 5 minute intervals.\nThe date range should be no more than one year when querying hourly, daily, or monthly intervals.",
                      "status": 0
                    }
                  },
                  "InvalidArgument": {
                    "value": {
                      "code": "InvalidArgument",
                      "message": "There is a problem with a parameter name or value.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "AccessDenied"
                    },
                    "message": {
                      "type": "string",
                      "description": "Please enter valid credentials."
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "InternalError"
                    },
                    "message": {
                      "type": "string",
                      "description": "We encountered an internal error. Please try again."
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-report-requests",
        "description": "This API returns the total number of requests for all of a customer's transports. Parameters allow you to specify a time period and an interval type.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/datefrom"
          },
          {
            "$ref": "#/components/parameters/dateto"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "interval",
            "description": "Granularity of time. Can be \"oneminute\", \"fiveminutes\", \"hourly\", \"daily\", or \"monthly\".\nIf the time range is no more than one day, the default value is \"oneminute\";\nIf the time range is more than one day but less than or equal to one week, the default value is \"fiveminutes\";\nIf the time range is more than one week but less than or equal to one month, the default value is \"hourly\";\nIf the time range is more than one month, the default value is \"daily\"; \nRestriction:\n1.\tOne minute - Maximum time range is 7 days\n2.\t5 minutes - Maximum time range is 1 month(31d)\n3.\tHourly, Daily, Monthly - Maximum time range is 1 year(366d)"
          },
          {
            "$ref": "#/components/parameters/timezone"
          },
          {
            "$ref": "#/components/parameters/accessDomain"
          },
          {
            "$ref": "#/components/parameters/transport"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/scope"
          }
        ]
      }
    },
    "/report/domains": {
      "get": {
        "summary": "Query Domains",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "domainsReport": {
                        "domainMetrics": [
                          "domain",
                          "accessDomain",
                          "accessPorts",
                          "regions",
                          "dedicatedIPService"
                        ],
                        "domainData": [
                          [
                            "test1.cc.qtlcname.com",
                            "test1.cc",
                            "80,443",
                            "MiddleEast",
                            "No"
                          ],
                          [
                            "test2.cn.qtlcname.com",
                            "test2.cn",
                            "80,11",
                            "MainlandChina,NorthAmerica,Europe,Asian-Pacific1,Asian-Pacific2,Asian-Pacific3,MiddleEast,SouthAmerica,Africa",
                            "No"
                          ]
                        ]
                      }
                    }
                  },
                  "properties": {
                    "domainsReport": {
                      "type": "object",
                      "properties": {
                        "domainMetrics": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "domainData": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "domainsReport": {
                        "domainMetrics": [
                          "domain",
                          "accessDomain",
                          "accessPorts",
                          "regions",
                          "dedicatedIPService"
                        ],
                        "domainData": [
                          [
                            "test1.cc.qtlcname.com",
                            "test1.cc",
                            "80,443",
                            "MiddleEast",
                            "No"
                          ],
                          [
                            "test2.cn.qtlcname.com",
                            "test2.cn",
                            "80,11",
                            "MainlandChina,NorthAmerica,Europe,Asian-Pacific1,Asian-Pacific2,Asian-Pacific3,MiddleEast,SouthAmerica,Africa",
                            "No"
                          ]
                        ]
                      }
                    }
                  },
                  "example-2": {
                    "value": {
                      "domainsReport": {
                        "groups": [
                          {
                            "domainData": [
                              [
                                "a1.com.qtlcname.com",
                                "a1.com",
                                "443",
                                "MainlandChina,NorthAmerica,Europe,Asian-Pacific1,Asian-Pacific2,Asian-Pacific3,MiddleEast,SouthAmerica,Africa",
                                "No"
                              ],
                              [
                                "a2.com.qtlcname.com",
                                "a2.com",
                                "443",
                                "MainlandChina,NorthAmerica,Europe,Asian-Pacific1,Asian-Pacific2,Asian-Pacific3,MiddleEast,SouthAmerica,Africa",
                                "No"
                              ]
                            ],
                            "group": "A company"
                          },
                          {
                            "domainData": [
                              [
                                "b1.cc.qtlcname.com",
                                "b1.cc",
                                "MiddleEast",
                                "80,443",
                                "",
                                "No"
                              ],
                              [
                                "b2.cn.qtlcname.com",
                                "b2.cn",
                                "80,11",
                                "MainlandChina,NorthAmerica,Europe,Asian-Pacific1,Asian-Pacific2,Asian-Pacific3,MiddleEast,SouthAmerica,Africa",
                                "No"
                              ]
                            ],
                            "group": "B company"
                          }
                        ],
                        "domainMetrics": [
                          "domain",
                          "accessDomain",
                          "accessPorts",
                          "regions",
                          "dedicatedIPService"
                        ],
                        "groupBy": "customerName"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing."
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "UnAuthorized": {
                    "value": {
                      "code": "UnAuthorized",
                      "message": "Invalid authentication / authorization credentials."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "InternalError": {
                    "value": {
                      "code": "InternalError",
                      "message": "We encountered an internal error. Please try again.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-report-domains",
        "description": "Returns the HDT domain information of the customer which configured in the specified time period.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/datefrom"
          },
          {
            "$ref": "#/components/parameters/dateto"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupby",
            "description": "Group the response by specified metrics, possible options are “customerName” and “customerId”. "
          }
        ]
      }
    },
    "/serviceQuotas": {
      "get": {
        "summary": "Query Service Quota List",
        "tags": [
          "ServiceQuotas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "serviceQuotas": {
                      "type": "array",
                      "description": "An array of serviceQuotas.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "serviceQuotaID": {
                            "$ref": "#/components/schemas/serviceQuota.serviceQuotaID"
                          },
                          "customerID": {
                            "$ref": "#/components/schemas/serviceQuota.customerID"
                          },
                          "status": {
                            "$ref": "#/components/schemas/serviceQuota.status"
                          },
                          "trialDeadline": {
                            "$ref": "#/components/schemas/serviceQuota.trialDeadline"
                          },
                          "billUsingStripe": {
                            "$ref": "#/components/schemas/serviceQuota.billUsingStripe"
                          },
                          "contractID": {
                            "$ref": "#/components/schemas/serviceQuota.contractID"
                          },
                          "contractStartDate": {
                            "$ref": "#/components/schemas/serviceQuota.contractStartDate"
                          },
                          "accountManagerEmail": {
                            "$ref": "#/components/schemas/serviceQuota.accountManagerEmail"
                          },
                          "description": {
                            "$ref": "#/components/schemas/serviceQuota.description"
                          },
                          "creationTime": {
                            "$ref": "#/components/schemas/serviceQuota.creationTime"
                          },
                          "lastUpdateTime": {
                            "$ref": "#/components/schemas/serviceQuota.lastUpdateTime"
                          },
                          "suspensionDate": {
                            "$ref": "#/components/schemas/serviceQuota.suspensionDate"
                          },
                          "upgradeDate": {
                            "$ref": "#/components/schemas/serviceQuota.upgradeDate"
                          }
                        }
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "Total number of service quotas."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "serviceQuotas": [
                        {
                          "serviceQuotaID": "123456",
                          "customerID": 123456,
                          "status": "active",
                          "trialDeadline": "2020-11-02T15:00:00Z",
                          "billUsingStripe": 1,
                          "contractID": "abcdefg",
                          "contractStartDate": "2020-10-02",
                          "accountManagerEmail": "abc@123.com",
                          "description": "this is a demo service quota",
                          "creationTime": "2020-10-02T15:00:00Z",
                          "lastUpdateTime": "2020-11-02T15:00:00Z",
                          "upgradeDate": "2020-11-02T15:00:00Z"
                        }
                      ],
                      "totalCount": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "InvalidStatus": {
                    "value": {
                      "code": "InvalidStatus",
                      "message": "The value of status should be one of \"trial\", \"active\" and \"suspended\".",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "A regular customer is not allowed to make this call.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-serviceQuotas",
        "description": "The API allows a reseller to get a list of service quotas of its child customers.\nBoth \"servicequotas\" and \"serviceQuotas\" are accepted in the path, which also applies to other APIs related to serviceQuotas.\n\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "Trial",
                "Active",
                "Suspended"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Status of the customer with respect to HDT service. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "contractID",
            "description": "ID of the contract signed for HDT service subscription.   For self-signup customers, we’ll use some default contractIDs (We might have different contractIDs for different payment currencies). This query parameter can be used to filter such customers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "accountManagerEmail",
            "description": "Email address of the account manager."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "offset",
            "description": "Use this field to paginate records. Default to 0."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "limit",
            "description": "Use this field to paginate records. Default to 100. Maximum 200."
          }
        ]
      },
      "post": {
        "summary": "Create Service Quota",
        "operationId": "post-serviceQuotas",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Location of the newly created serviceQuota."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "MissingAuthHeader": {
                    "value": {
                      "code": "MissingAuthHeader",
                      "message": "The HTTP authorization header is missing.",
                      "status": 0
                    }
                  },
                  "MissingDateHeader": {
                    "value": {
                      "code": "MissingDateHeader",
                      "message": "Authorized request must have a Date header.",
                      "status": 0
                    }
                  },
                  "RequestExpired": {
                    "value": {
                      "code": "RequestExpired",
                      "message": "Request has expired. Timestamp date is xxx.",
                      "status": 0
                    }
                  },
                  "InvalidURI": {
                    "value": {
                      "code": "InvalidURI",
                      "message": "Could not parse the specified URI.",
                      "status": 0
                    }
                  },
                  "InvalidStatus": {
                    "value": {
                      "code": "string",
                      "message": "string",
                      "status": 0
                    }
                  },
                  "InvalidCustomerID": {
                    "value": {
                      "code": "InvalidCustomerID",
                      "message": "The customer ID given does not exist or is not a child of the caller.",
                      "status": 0
                    }
                  },
                  "NoSubscription": {
                    "value": {
                      "code": "NoSubscription",
                      "message": "The customer specified is not subscribed to HDT service. Please add \"HDT\" to the products list of the customer first. ",
                      "status": 0
                    }
                  },
                  "InvalidTrialDeadline": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "The trial deadline is not a valid RFC3339 timestamp. It should be in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format.",
                      "status": 0
                    }
                  },
                  "InvalidTrialDeadline-1": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "The trialDeadline specified cannot be a time in the past.",
                      "status": 0
                    }
                  },
                  "InvalidTrialDeadline-2": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "The trial period cannot be longer than 30 days.",
                      "status": 0
                    }
                  },
                  "TrialDeadlineNotSpecified": {
                    "value": {
                      "code": "TrialDeadlineNotSpecified",
                      "message": "The field trialDeadline is required when customer status is set to \"trial\".",
                      "status": 0
                    }
                  },
                  "ContractIDNotSpecified": {
                    "value": {
                      "code": "ContractIDNotSpecified",
                      "message": "The field contractID is required when billUsingStripe is set to true.",
                      "status": 0
                    }
                  },
                  "ContractStartDateNotSpecified": {
                    "value": {
                      "code": "ContractStartDateNotSpecified",
                      "message": "The field contractStartDate is required when contractID is specified.",
                      "status": 0
                    }
                  },
                  "InvalidContractStartDate": {
                    "value": {
                      "code": "InvalidContractStartDate",
                      "message": "The date must be in \"yyyy-MM-dd\" format.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "A regular customer is not allowed to make this call.",
                      "status": 0
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Qtl-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "ServiceQuotaExists": {
                    "value": {
                      "code": "ServiceQuotaExists",
                      "message": "The customer specified already has an existing service quota.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "description": "The API allows a reseller to define service quotas for a child customer. The child customer cannot have quota levels greater than those of the reseller. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerID": {
                    "description": "ID of the customer in ngAdmin DB. The customer must be a child of the caller. Each customer is allowed to have one serviceQuota only. The customer must have “HDT” in its products list before a service quota can be created for the customer.",
                    "type": "integer"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of a customer. Can be “Trial”, “Active” or “Suspended”. Default set to “Suspended”.\n\nThe accounts with “trial” status are subject to certain restrictions, e.g., limited trial period and minimum resource availability.  \n\nIf the status is set to “suspended”, any requests from the customer will be rejected by the HDT API server. Note that this status is related to HDT service only, it doesn't affect other products subscribed by the customer."
                  },
                  "trialDeadline": {
                    "type": "string",
                    "description": "Date-time in RFC 3339 format indicating when the trial expires, e.g. 2021-07-01T15:00:00Z.\nRequired only when the status is set to “trial”. Ignored otherwise. Cannot be a date-time in the past. The trial cannot last longer than 30 days after the trial starts.\n\nWhen trialDeadline expires, the status will be set to “Suspended” and all existing HDT transports will be inactive, after 30 more days of at “suspended” status, all transports for the customer will be deleted."
                  },
                  "billUsingStripe": {
                    "description": "Default to false. A flag indicating whether this customer will be invoiced using Stripe. When set to true, the billing module which integrates Stripe will take care of invoicing for this customer.\n0 as false, 1 as true.",
                    "type": "integer"
                  },
                  "contractID": {
                    "type": "string",
                    "description": "ID of the contract signed for HDT service subscription.\n\nRequired when “billUsingStripe” is set to true. The billing module will use this ID to query billing items and prices for the customer at SAP."
                  },
                  "contractStartDate": {
                    "type": "string",
                    "description": "The start date of a contract. Must be a UTC date in “yyyy-MM-dd” format. \nRequired when “contractID” is provided."
                  },
                  "accountManagerEmail": {
                    "$ref": "#/components/schemas/serviceQuota.accountManagerEmail"
                  },
                  "description": {
                    "$ref": "#/components/schemas/serviceQuota.description"
                  },
                  "resourceQuotas": {
                    "$ref": "#/components/schemas/serviceQuota.resourceQuotas"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "customerID": 123456,
                    "status": "trial",
                    "trialDeadline": "2020-11-02T15:00:00Z",
                    "billUsingStripe": 0,
                    "accountManagerEmail": "abc@123.com",
                    "description": "this is a demo service quota",
                    "resourceQuotas": {
                      "transportsLimit": 10,
                      "trafficVolumeLimit": 2000,
                      "allowVirtualPrivateLine": 1,
                      "allowDedicatedIPService": 1,
                      "allowRawLogDownload": 1
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ServiceQuotas"
        ]
      }
    },
    "/serviceQuotas/{serviceQuotaID}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "serviceQuotaID",
          "in": "path",
          "required": true,
          "description": "ID of service quota. Can be \"me\" to indicate service quota for the caller itself."
        }
      ],
      "get": {
        "summary": "Query Service Quota by ID",
        "tags": [
          "ServiceQuotas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "serviceQuotaID": {
                      "$ref": "#/components/schemas/serviceQuota.serviceQuotaID"
                    },
                    "customerID": {
                      "$ref": "#/components/schemas/serviceQuota.customerID"
                    },
                    "status": {
                      "$ref": "#/components/schemas/serviceQuota.status"
                    },
                    "trialDeadline": {
                      "$ref": "#/components/schemas/serviceQuota.trialDeadline"
                    },
                    "billUsingStripe": {
                      "$ref": "#/components/schemas/serviceQuota.billUsingStripe"
                    },
                    "contractID": {
                      "$ref": "#/components/schemas/serviceQuota.contractID"
                    },
                    "contractStartDate": {
                      "$ref": "#/components/schemas/serviceQuota.contractStartDate"
                    },
                    "accountManagerEmail": {
                      "$ref": "#/components/schemas/serviceQuota.accountManagerEmail"
                    },
                    "description": {
                      "$ref": "#/components/schemas/serviceQuota.description"
                    },
                    "creationTime": {
                      "$ref": "#/components/schemas/serviceQuota.creationTime"
                    },
                    "lastUpdateTime": {
                      "$ref": "#/components/schemas/serviceQuota.lastUpdateTime"
                    },
                    "upgradeDate": {
                      "$ref": "#/components/schemas/serviceQuota.upgradeDate"
                    },
                    "suspensionDate": {
                      "$ref": "#/components/schemas/serviceQuota.suspensionDate"
                    },
                    "resourceQuotas": {
                      "$ref": "#/components/schemas/serviceQuota.resourceQuotas"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "serviceQuotaID": "123",
                      "customerID": 123456,
                      "status": "active",
                      "trialDeadline": "2020-11-02T15:00:00Z",
                      "billUsingStripe": 1,
                      "contractID": "abcdefg",
                      "contractStartDate": "2020-10-02",
                      "accountManagerEmail": "abc@123.com",
                      "description": "this is a demo service quota",
                      "resourceQuotas": {
                        "transportsLimit": 10,
                        "trafficVolumeLimit": 2000,
                        "allowVirtualPrivateLine": 1,
                        "allowDedicatedIPService": 1,
                        "allowRawLogDownload": 1
                      },
                      "creationTime": "2020-10-02T15:00:00Z",
                      "lastUpdateTime": "2020-11-02T15:00:00Z",
                      "upgradeDate": "2020-11-02T15:00:00Z"
                    }
                  }
                }
              }
            },
            "headers": {
              "Qtl-Request-Id": {
                "description": "A string automatically generated by the API server to identify each request.",
                "required": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "serviceQuotaIDNotFound": {
                    "value": {
                      "code": "serviceQuotaIDNotFound",
                      "message": "The serviceQuotaID given does not exist or is not for a child customer of the caller.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-serviceQuotas-serviceQuotaID",
        "description": "Retrieves the detailed information of a service quota by service quota ID.\nThe service quota ID can be the string \"me\" to indicate the caller customer itself. \n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          }
        ]
      },
      "patch": {
        "summary": "Update Service Quota by ID",
        "operationId": "patch-serviceQuotas-serviceQuotaID",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "InvalidStatus": {
                    "value": {
                      "code": "InvalidStatus",
                      "message": "The status specified is invalid. Must be one of \"trial\", \"suspended\" and \"active\"."
                    }
                  },
                  "InvalidTrialDeadline": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "Invalid parameter {trialDeadline}. {trialDeadline} is not a valid RFC 3339 timestamp. The timestamp should be in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format."
                    }
                  },
                  "InvalidTrialDeadline-1": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "The trialDeadline specified cannot be a time in the past."
                    }
                  },
                  "InvalidTrialDeadline-2": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "The trial period cannot be longer than 90 days."
                    }
                  },
                  "TrialDeadlineNotSpecified": {
                    "value": {
                      "code": "TrialDeadlineNotSpecified",
                      "message": "The field trialDeadline is required when customer status is set to \"trial\"."
                    }
                  },
                  "ContractIDNotSpecified": {
                    "value": {
                      "code": "ContractIDNotSpecified",
                      "message": "The field contractID is required when billUsingStripe is set to true."
                    }
                  },
                  "ContractStartDateNotSpecified": {
                    "value": {
                      "code": "ContractStartDateNotSpecified",
                      "message": "The field contractStartDate is required when contractID is specified."
                    }
                  },
                  "InvalidContractStartDate": {
                    "value": {
                      "code": "InvalidContractStartDate",
                      "message": "The date must be in \"yyyy-MM-dd\" format."
                    }
                  },
                  "RequiredFieldMissing": {
                    "value": {
                      "code": "RequiredFieldMissing",
                      "message": "The field {field} is required."
                    }
                  },
                  "FieldValueTooLong": {
                    "value": {
                      "code": "FieldValueTooLong",
                      "message": "The {field} must be not more than xxx characters."
                    }
                  },
                  "InvalidResourceQuota": {
                    "value": {
                      "code": "InvalidResourceQuota",
                      "message": "The resource quota {quota} specified is invalid. Must be an integer within the range {range}."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "A regular customer is not allowed to make this call."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "serviceQuotaIDNotFound": {
                    "value": {
                      "code": "serviceQuotaIDNotFound",
                      "message": "The serviceQuotaID given does not exist or is not for a child customer of the caller."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "ServiceQuotaExists": {
                    "value": {
                      "code": "ServiceQuotaExists",
                      "message": "The customer specified already has an existing service quota."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "The API allows a reseller to update a child customer's service quota by referencing its service quota ID.",
        "tags": [
          "ServiceQuotas"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of a customer. Can be \"Trial\", \"Active\" or \"Suspended\". Default set to \"Suspended\". A \"Trial\" status means this is a self-signup free trial customer. A free trial customer is subject to various restrictions, e.g., limited trial period and minimum resource availability.  \n\nIf the status is set to \"Suspended\", any requests from the customer will be rejected by the HDT API server. Note that this status is related to HDT service only. It doesn’t affect other products subscribed by the customer."
                  },
                  "trialDeadline": {
                    "type": "string",
                    "description": "Date-time in RFC 3339 format indicates when the trial expires, e.g. 2021-07-01T15:00:00Z.\nRequired only when the status is set to \"trial\". Ignored otherwise. Cannot be a date-time in the past. The trial cannot last longer than 30 days after the trial starts.\n\nWhen trialDeadline expires, the status will be set to \"Suspended\" and all existing HDT transports will be inactive, after 14 more days at \"suspended\" status, all transports for the customer will be deleted."
                  },
                  "billUsingStripe": {
                    "type": "integer",
                    "description": "Default to false. A flag indicates whether this customer will be invoiced using Stripe. When set to true, the billing module which integrates Stripe will take care of invoicing for this customer.\n0 for false, 1 for true."
                  },
                  "contractID": {
                    "type": "string",
                    "description": "ID of the contract signed for HDT service subscription.\n\nRequired when \"billUsingStripe\" is set to true. The billing module will use this ID to query billing items and prices for the customer at SAP."
                  },
                  "contractStartDate": {
                    "type": "string",
                    "description": "The start date of a contract. Must be a UTC date in \"yyyy-MM-dd\" format. This value will be used by the API server to decide the billing amount for this IP billing item.\n\nRequired when \"contractID\" is provided."
                  },
                  "accountManagerEmail": {
                    "$ref": "#/components/schemas/serviceQuota.accountManagerEmail"
                  },
                  "description": {
                    "$ref": "#/components/schemas/serviceQuota.description"
                  },
                  "resourceQuotas": {
                    "$ref": "#/components/schemas/serviceQuota.resourceQuotas"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Service Quota by ID",
        "operationId": "delete-serviceQuotas-serviceQuotaID",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "HasResources": {
                    "value": {
                      "code": "HasResources",
                      "message": "This customer still has transports. These resources must be removed before the service quota can be deleted."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "A regular customer is not allowed to make this call."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "serviceQuotaIDNotFound": {
                    "value": {
                      "code": "serviceQuotaIDNotFound",
                      "message": "The serviceQuotaID given does not exist or is not for a child customer of the caller."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API allows a reseller to delete a child customer's service quota by referencing its service quota ID. The deletion can only be performed when the customer does not have any transports.",
        "tags": [
          "ServiceQuotas"
        ]
      }
    },
    "/serviceQuotas/customer/{customerID}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "customerID",
          "in": "path",
          "required": true,
          "description": "ID of customer. Can be \"me\" to indicate service quota for the caller itself."
        }
      ],
      "get": {
        "summary": "Query Service Quota by customer ID",
        "tags": [
          "ServiceQuotas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "serviceQuotaID": {
                      "$ref": "#/components/schemas/serviceQuota.serviceQuotaID"
                    },
                    "customerID": {
                      "$ref": "#/components/schemas/serviceQuota.customerID"
                    },
                    "status": {
                      "$ref": "#/components/schemas/serviceQuota.status"
                    },
                    "trialDeadline": {
                      "$ref": "#/components/schemas/serviceQuota.trialDeadline"
                    },
                    "billUsingStripe": {
                      "$ref": "#/components/schemas/serviceQuota.billUsingStripe"
                    },
                    "contractID": {
                      "$ref": "#/components/schemas/serviceQuota.contractID"
                    },
                    "contractStartDate": {
                      "$ref": "#/components/schemas/serviceQuota.contractStartDate"
                    },
                    "accountManagerEmail": {
                      "$ref": "#/components/schemas/serviceQuota.accountManagerEmail"
                    },
                    "description": {
                      "$ref": "#/components/schemas/serviceQuota.description"
                    },
                    "creationTime": {
                      "$ref": "#/components/schemas/serviceQuota.creationTime"
                    },
                    "lastUpdateTime": {
                      "$ref": "#/components/schemas/serviceQuota.lastUpdateTime"
                    },
                    "upgradeDate": {
                      "$ref": "#/components/schemas/serviceQuota.upgradeDate"
                    },
                    "suspensionDate": {
                      "$ref": "#/components/schemas/serviceQuota.suspensionDate"
                    },
                    "resourceQuotas": {
                      "$ref": "#/components/schemas/serviceQuota.resourceQuotas"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "serviceQuotaID": "123",
                      "customerID": 123456,
                      "status": "active",
                      "trialDeadline": "2020-11-02T15:00:00Z",
                      "billUsingStripe": 1,
                      "contractID": "abcdefg",
                      "contractStartDate": "2020-10-02",
                      "accountManagerEmail": "abc@123.com",
                      "description": "this is a demo service quota",
                      "resourceQuotas": {
                        "transportsLimit": 10,
                        "trafficVolumeLimit": 2000,
                        "allowVirtualPrivateLine": 1,
                        "allowDedicatedIPService": 1,
                        "allowRawLogDownload": 1
                      },
                      "creationTime": "2020-10-02T15:00:00Z",
                      "lastUpdateTime": "2020-11-02T15:00:00Z",
                      "upgradeDate": "2020-11-02T15:00:00Z"
                    }
                  }
                }
              }
            },
            "headers": {
              "Qtl-Request-Id": {
                "description": "A string automatically generated by the API server to identify each request.",
                "required": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    },
                    "status": {
                      "$ref": "#/components/schemas/response.status"
                    }
                  }
                },
                "examples": {
                  "customerIDNotFound": {
                    "value": {
                      "code": "customerIDNotFound",
                      "message": "The customerID given does not exist or the caller does not have permission to access it.",
                      "status": 0
                    }
                  },
                  "serviceQuotaNotFound": {
                    "value": {
                      "code": "serviceQuotaNotFound",
                      "message": "No service quota found for the customer.",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-serviceQuotas-customerID",
        "description": "Retrieves the detailed information of a service quota by customer ID.\nThe customer ID can be string \"me\" to indicate the caller customer itself. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/On-Behalf-Of"
          }
        ]
      },
      "patch": {
        "summary": "Update Service Quota by customer ID",
        "operationId": "patch-serviceQuotas-customerID",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "InvalidStatus": {
                    "value": {
                      "code": "InvalidStatus",
                      "message": "The status specified is invalid. Must be one of \"trial\", \"suspended\" and \"active\"."
                    }
                  },
                  "InvalidTrialDeadline": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "Invalid parameter {trialDeadline}. {trialDeadline} is not a valid RFC 3339 timestamp. The timestamp should be in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format."
                    }
                  },
                  "InvalidTrialDeadline-1": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "The trialDeadline specified cannot be a time in the past."
                    }
                  },
                  "InvalidTrialDeadline-2": {
                    "value": {
                      "code": "InvalidTrialDeadline",
                      "message": "The trial period cannot be longer than 90 days."
                    }
                  },
                  "TrialDeadlineNotSpecified": {
                    "value": {
                      "code": "TrialDeadlineNotSpecified",
                      "message": "The field trialDeadline is required when customer status is set to \"trial\"."
                    }
                  },
                  "ContractIDNotSpecified": {
                    "value": {
                      "code": "ContractIDNotSpecified",
                      "message": "The field contractID is required when billUsingStripe is set to true."
                    }
                  },
                  "ContractStartDateNotSpecified": {
                    "value": {
                      "code": "ContractStartDateNotSpecified",
                      "message": "The field contractStartDate is required when contractID is specified."
                    }
                  },
                  "InvalidContractStartDate": {
                    "value": {
                      "code": "InvalidContractStartDate",
                      "message": "The date must be in \"yyyy-MM-dd\" format."
                    }
                  },
                  "RequiredFieldMissing": {
                    "value": {
                      "code": "RequiredFieldMissing",
                      "message": "The field {field} is required."
                    }
                  },
                  "FieldValueTooLong": {
                    "value": {
                      "code": "FieldValueTooLong",
                      "message": "The {field} must be not more than xxx characters."
                    }
                  },
                  "InvalidResourceQuota": {
                    "value": {
                      "code": "InvalidResourceQuota",
                      "message": "The resource quota {quota} specified is invalid. Must be an integer within the range {range}."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "A regular customer is not allowed to make this call."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "customerIDNotFound": {
                    "value": {
                      "code": "customerIDNotFound",
                      "message": "The customerID given does not exist or the caller does not have permission to access it."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "ServiceQuotaExists": {
                    "value": {
                      "code": "ServiceQuotaExists",
                      "message": "The customer specified already has an existing service quota."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "The API allows a reseller to update a child customer's service quota by referencing its customer ID.",
        "tags": [
          "ServiceQuotas"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept-Encoding"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of a customer. Can be \"Trial\", \"Active\" or \"Suspended\". Default set to \"Suspended\". A \"Trial\" status means this is a self-signup free trial customer. A free trial customer is subject to various restrictions, e.g., limited trial period and minimum resource availability.  \n\nIf the status is set to \"Suspended\", any requests from the customer will be rejected by the HDT API server. Note that this status is related to HDT service only. It doesn’t affect other products subscribed by the customer."
                  },
                  "trialDeadline": {
                    "type": "string",
                    "description": "Date-time in RFC 3339 format indicates when the trial expires, e.g. 2021-07-01T15:00:00Z.\nRequired only when the status is set to \"trial\". Ignored otherwise. Cannot be a date-time in the past. The trial cannot last longer than 30 days after the trial starts.\n\nWhen trialDeadline expires, the status will be set to \"Suspended\" and all existing HDT transports will be inactive, after 14 more days at \"suspended\" status, all transports for the customer will be deleted."
                  },
                  "billUsingStripe": {
                    "type": "integer",
                    "description": "Default to false. A flag indicates whether this customer will be invoiced using Stripe. When set to true, the billing module which integrates Stripe will take care of invoicing for this customer.\n0 for false, 1 for true."
                  },
                  "contractID": {
                    "type": "string",
                    "description": "ID of the contract signed for HDT service subscription.\n\nRequired when \"billUsingStripe\" is set to true. The billing module will use this ID to query billing items and prices for the customer at SAP."
                  },
                  "contractStartDate": {
                    "type": "string",
                    "description": "The start date of a contract. Must be a UTC date in \"yyyy-MM-dd\" format. This value will be used by the API server to decide the billing amount for this IP billing item.\n\nRequired when \"contractID\" is provided."
                  },
                  "accountManagerEmail": {
                    "$ref": "#/components/schemas/serviceQuota.accountManagerEmail"
                  },
                  "description": {
                    "$ref": "#/components/schemas/serviceQuota.description"
                  },
                  "resourceQuotas": {
                    "$ref": "#/components/schemas/serviceQuota.resourceQuotas"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Service Quota by customer ID",
        "operationId": "delete-serviceQuotas-customerID",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Qtl-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "A string automatically generated by the API server to identify each request."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "HasResources": {
                    "value": {
                      "code": "HasResources",
                      "message": "This customer still has transports. These resources must be removed before the service quota can be deleted."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "AccessDenied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "A regular customer is not allowed to make this call."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "customerIDNotFound": {
                    "value": {
                      "code": "customerIDNotFound",
                      "message": "The customerID given does not exist or the caller does not have permission to access it."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API allows a reseller to delete a child customer's service quota by referencing its customer ID. The deletion can only be performed when the customer does not have any transports.",
        "tags": [
          "ServiceQuotas"
        ]
      }
    },
    "/serviceQuotas/usage/{serviceQuotaID}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "serviceQuotaID",
          "in": "path",
          "required": true,
          "description": "ID of service quota. Can be \"me\" to indicate service quota for the caller itself."
        }
      ],
      "get": {
        "summary": "Query Service Quota Usage by ID",
        "tags": [
          "ServiceQuotas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceQuotas": {
                      "$ref": "#/components/schemas/serviceQuota.resourceQuotas"
                    },
                    "resourceQuotasUsed": {
                      "type": "object",
                      "description": "Global resource quotas available to a customer.",
                      "properties": {
                        "transports": {
                          "type": "integer",
                          "description": "The number of available transports a customer has used."
                        },
                        "trafficVolume": {
                          "type": "number",
                          "description": "The traffic volume in GB that a customer has transported, and this item is only available for self-signup users."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "resourceQuotas": {
                        "transportsLimit": 2,
                        "trafficVolumeLimit": 1000,
                        "allowVirtualPrivateLine": 1,
                        "allowDedicatedIPService": 1,
                        "allowRawLogDownload": 1
                      },
                      "resourceQuotasUsed": {
                        "transports": 1,
                        "trafficVolume": 200
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "serviceQuotaIDNotFound": {
                    "value": {
                      "code": "serviceQuotaIDNotFound",
                      "message": "The serviceQuotaID given does not exist or is not for a child customer of the caller."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-serviceQuotas-usage-serviceQuotaID",
        "description": "Retrieves the detailed usage information of a service quota by service quota ID.\nThe service quota ID can be string \"me\" to indicate the caller customer itself. "
      }
    },
    "/serviceQuotas/usage/customer/{customerID}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "customerID",
          "in": "path",
          "required": true,
          "description": "ID of customer. Can be \"me\" to indicate service quota for the caller itself."
        }
      ],
      "get": {
        "summary": "Query Service Quota Usage by customer ID",
        "tags": [
          "ServiceQuotas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceQuotas": {
                      "$ref": "#/components/schemas/serviceQuota.resourceQuotas"
                    },
                    "resourceQuotasUsed": {
                      "type": "object",
                      "description": "Global resource quotas available to a customer.",
                      "properties": {
                        "transports": {
                          "type": "integer",
                          "description": "The number of available transports a customer has used."
                        },
                        "trafficVolume": {
                          "type": "number",
                          "description": "The traffic volume in GB that a customer has transported, and this item is only available for self-signup users."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "resourceQuotas": {
                        "transportsLimit": 2,
                        "trafficVolumeLimit": 1000,
                        "allowVirtualPrivateLine": 1,
                        "allowDedicatedIPService": 1,
                        "allowRawLogDownload": 1
                      },
                      "resourceQuotasUsed": {
                        "transports": 1,
                        "trafficVolume": 200
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "$ref": "#/components/schemas/response.code"
                    },
                    "message": {
                      "$ref": "#/components/schemas/response.message"
                    }
                  }
                },
                "examples": {
                  "customerIDNotFound": {
                    "value": {
                      "code": "customerIDNotFound",
                      "message": "The customer ID given does not exist or the caller does not have permission to access it."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-serviceQuotas-usage-customerID",
        "description": "Retrieves the detailed usage information of a service quota by customer ID.\nThe customer ID can be the string \"me\" to indicate the caller customer itself. \n"
      }
    }
  },
  "components": {
    "schemas": {
      "transport.id": {
        "title": "transportId",
        "type": "integer",
        "description": "Transport ID. It is a unique integer in the HDT system."
      },
      "transport.code": {
        "title": "transportCode",
        "type": "string",
        "description": "It will be in \"targetDomain:targetPort\" form if transport type is \"ipport\", and in \"userAccount\" form if transport type is \"vpn\" or \"socks5\"."
      },
      "transport.type": {
        "title": "transportType",
        "type": "string",
        "description": "Transport type, i.e., \"ipport\", \"vpn\" or \"socks5\".\nFor NG API, we only support ip-port transport.\nThis field is for internal use. For public, it is invisible and will be set to default value \"ipport\".",
        "x-internal": true
      },
      "transport.name": {
        "title": "transportName",
        "type": "string",
        "description": "Transport name."
      },
      "transport.targetDomain": {
        "title": "targetDomain",
        "type": "string",
        "description": "A domain or IP address referring to the origin server of your application. HDT will access this domain/IP address to get data from the origin server. When transport type is \"ipport\", this parameter is valid and required. A domain name's length can be up to 250 characters."
      },
      "transport.targetPort": {
        "title": "targetPort",
        "type": "integer",
        "description": "When transport type is \"ipport\", this parameter is valid and required. It must be an integer between 1 and 65535."
      },
      "transport.useFtp": {
        "type": "integer",
        "title": "useFtp",
        "description": "Indicates whether to use ftp transport. 0 means false, 1 means true.",
        "default": 0,
        "enum": [
          0,
          1
        ]
      },
      "transport.cName": {
        "type": "string",
        "title": "cName",
        "description": "The CNAME HDT generates for a transport. To accelerate using HDT, modify your DNS to point your access domain to this value.",
        "format": "hostname"
      },
      "transport.accessPort": {
        "title": "accessPort",
        "type": "integer",
        "description": "Access port of accelerated application for the public users. When transport type is 'ipport', the HDT API server will return an available access port. When applicationProtocol is \"http\", this parameter will be 80; when applicationProtocol is \"sni\" this parameter will be 443."
      },
      "transport.useUdp": {
        "type": "integer",
        "title": "useUdp",
        "description": "Indicates whether to use udp transport. 0:TCP, 1:UDP.",
        "enum": [
          0,
          1
        ],
        "default": 0
      },
      "transport.applicationProtocol": {
        "type": "string",
        "title": "applicationProtocol",
        "description": "Type of protocol that supports the port-sharing feature, such as \"http\", \"sni\". It is valid only for transport type \"ipport\".",
        "enum": [
          "http",
          "sni"
        ]
      },
      "transport.accessDomain": {
        "title": "accessDomain",
        "type": "string",
        "description": "Access domain of accelerated application for the public users. The HDT API supports multiple domains separated by commas and wildcard to match multiple subdomains. For example:\naaa.domain1.com,*.domain2.com,*.domain3.org.cn\n\nNote:\n1. The HDT API supports up to one level of subdomains for \"accessDomain\" field;\n2. \"accessDomain\" can't be empty; \n3. When \"applicationProtocol\" is not empty, the combination of \"accessDomain\" and \"applicationProtocol\" field must be globally unique;\n4. When \"applicationProtocol\" is empty, the value of \"accessDomain\" is unique to each customer. Transports belong to the same customer can share \"accessDomain\". ",
        "x-examples": {
          "example-1": {
            "accessDomain": "aaa.domain1.com"
          },
          "example-2": {
            "accessDomain": "*.domain2.com"
          }
        }
      },
      "transport.status": {
        "type": "integer",
        "title": "transportStatus",
        "description": "Status of this transport. 1 means \"enabled\", while 0 means \"disabled\".",
        "x-examples": {
          "example-1": 1
        },
        "enum": [
          0,
          1
        ]
      },
      "transport.speedLimit": {
        "title": "speedLimit",
        "description": "Speed limit in \"Mbps\". It must be an integer between 0 and 10000. 0 means there is no limit. Default value is 0 ",
        "type": "number"
      },
      "transport.concurrentLimit": {
        "title": "concurrentLimit",
        "type": "integer",
        "description": "Number of concurrent connections allowed for the transport. It must be an integer between 0 and 32768. 0 means there is no limit. Default value is 0."
      },
      "transport.ipWhiteList": {
        "type": "string",
        "title": "ipWhiteList",
        "description": "IP address white-list. Valid values are IP address, IP address segment, IP address range, or the combination of them separated by semicolons. Spaces, tabs or line breaks can only appear in front of or behind IP address. The default value is a blank string.\nThe version of IP in this list should keep the same with the one specified in field 'ipVersion'. If the field 'ipVersion' is empty, then IPv4 should be used by default.\n\nFor example:\nvalid:\n 11.11.12.3/20; 2.3.4.5-2.3.4.10;\n21.12.45.18\n\nInvalid:\n 11.11. 12.3/20;  2.3.4.5-2.3.\n4.10;\n21.12.45.18",
        "x-examples": {
          "example-1": {
            "ipWhiteList": "11.11.12.3/20;  2.3.4.5-2.3.4.10; 21.12.45.18"
          }
        }
      },
      "transport.comments": {
        "title": "comments",
        "type": "string",
        "description": "Enter notes about the transport."
      },
      "transport.transportData": {
        "title": "transport-data",
        "description": "A container of \"transportId\", \"transportCode\", \"transportType\", \"transportName\", \"status\" and some other elements describing a transport.",
        "x-examples": {
          "example-1": {
            "transportId": 0,
            "transportCode": "string",
            "transportType": "string",
            "transportName": "string",
            "status": 1,
            "accessDomain": "string",
            "accessPort": 0,
            "targetDomain": "string",
            "targetPort": 0
          }
        },
        "type": "object",
        "properties": {
          "transportId": {
            "$ref": "#/components/schemas/transport.id"
          },
          "transportCode": {
            "$ref": "#/components/schemas/transport.code"
          },
          "transportType": {
            "$ref": "#/components/schemas/transport.type"
          },
          "transportName": {
            "$ref": "#/components/schemas/transport.name"
          },
          "transportStatus": {
            "$ref": "#/components/schemas/transport.status"
          },
          "targetDomain": {
            "$ref": "#/components/schemas/transport.targetDomain"
          },
          "targetPort": {
            "$ref": "#/components/schemas/transport.targetPort"
          },
          "accessDomain": {
            "$ref": "#/components/schemas/transport.accessDomain"
          },
          "accessPort": {
            "$ref": "#/components/schemas/transport.accessPort"
          },
          "cName": {
            "$ref": "#/components/schemas/transport.cName"
          },
          "useFtp": {
            "$ref": "#/components/schemas/transport.useFtp"
          },
          "applicationProtocol": {
            "$ref": "#/components/schemas/transport.applicationProtocol"
          },
          "shieldHost": {
            "$ref": "#/components/schemas/transport.shieldHost"
          },
          "useUdp": {
            "$ref": "#/components/schemas/transport.useUdp"
          },
          "speedLimit": {
            "$ref": "#/components/schemas/transport.speedLimit"
          },
          "concurrentLimit": {
            "$ref": "#/components/schemas/transport.concurrentLimit"
          },
          "transportStrategy": {
            "$ref": "#/components/schemas/transport.transportStrategy"
          },
          "carryClientIp": {
            "$ref": "#/components/schemas/transport.carryClientIp"
          },
          "ipVersion": {
            "$ref": "#/components/schemas/transport.ipVersion"
          },
          "hasPSB": {
            "$ref": "#/components/schemas/transport.hasPsb"
          },
          "hasICP": {
            "$ref": "#/components/schemas/transport.hasIcp"
          },
          "dedicatedIpService": {
            "$ref": "#/components/schemas/transport.dedicatedIpService"
          },
          "ipWhiteList": {
            "$ref": "#/components/schemas/transport.ipWhiteList"
          },
          "ipBlackList": {
            "$ref": "#/components/schemas/transport.ipBlackList"
          },
          "comments": {
            "$ref": "#/components/schemas/transport.comments"
          }
        }
      },
      "transport.deployId": {
        "title": "transport.deployId",
        "type": "integer",
        "description": "Indicates a transport configuration history ID. The ID is a unique integer to this transport."
      },
      "report.flowReport": {
        "title": "flow-report",
        "type": "object",
        "description": "A container for traffic information. It contains one <records-count> child element, one <upload-summary> child element, one <download-summary> child element and zero or more <flow-data> child elements indicating volume at different times.",
        "properties": {
          "records-count": {
            "$ref": "#/components/schemas/report.recordsCount"
          },
          "upload–summary": {
            "$ref": "#/components/schemas/report.uploadSummary"
          },
          "download-summary": {
            "$ref": "#/components/schemas/report.downloadSummary"
          },
          "flow-data": {
            "$ref": "#/components/schemas/report.flowData"
          }
        }
      },
      "report.recordsCount": {
        "title": "records-count",
        "type": "integer",
        "description": "Total number of records."
      },
      "report.uploadSummary": {
        "title": "upload -summary",
        "type": "integer",
        "description": "Total upload traffic volume in bytes for all records."
      },
      "report.downloadSummary": {
        "title": "download-summary",
        "type": "integer",
        "description": "Total download traffic volume in bytes for all records."
      },
      "report.flowData": {
        "title": "flow-data",
        "type": "array",
        "description": "A container of <timestamp>, <upload>, and <download> elements describing the traffic volume in bytes for a specified period of time.",
        "items": {
          "type": "object",
          "properties": {
            "timestamp": {
              "$ref": "#/components/schemas/report.timestamp"
            },
            "upload": {
              "$ref": "#/components/schemas/report.upload"
            },
            "download": {
              "$ref": "#/components/schemas/report.download"
            }
          }
        },
        "x-examples": {
          "example-1": [
            {
              "timestamp": "2014-07-31T23:05:00",
              "upload": 197421,
              "download": 297421
            },
            {
              "timestamp": "2014-07-31T23:10:00",
              "upload": 255564,
              "download": 155564
            },
            {
              "timestamp": "2014-07-31T23:15:00",
              "upload": 516326,
              "download": 316326
            },
            {
              "timestamp": "2014-07-31T23:20:00",
              "upload": 129685,
              "download": 329685
            },
            {
              "timestamp": "2014-07-31T23:25:00",
              "upload": 516326,
              "download": 316326
            },
            {
              "timestamp": "2014-07-31T23:30:00",
              "upload": 144774,
              "download": 144774
            }
          ]
        }
      },
      "report.timestamp": {
        "title": "timestamp",
        "type": "string",
        "description": "The timestamp is in RFC 3339 format and includes the offset from UTC.\nIf interval from request is \"oneminute\" or \"fiveminutes\", the format will be \"YYYY-MM-DD'T'hh:mm:00\", which indicates the end time of the interval.\nIf interval from request is \"hourly\", “daily”, or “monthly”, the format will be \"YYYY-MM-DD'T'hh:mm:00\", which indicates the start time of the interval.",
        "x-examples": {
          "example-1": "2014-07-31T23:05:00"
        }
      },
      "report.upload": {
        "title": "upload",
        "type": "integer",
        "description": "Upload traffic volume in bytes for a specified period of time."
      },
      "report.download": {
        "title": "download",
        "type": "integer",
        "description": "Download traffic volume in bytes during a specified period of time."
      },
      "report.requestsReport": {
        "title": "requests-report",
        "type": "object",
        "description": "A container for request count information. It contains <records-count>, <total-summary>, <success-summary>, and <requests-data> for a specified period of time.",
        "properties": {
          "records-count": {
            "$ref": "#/components/schemas/report.recordsCount"
          },
          "total-summary": {
            "$ref": "#/components/schemas/report.totalRequestsSummary"
          },
          "success-summary": {
            "$ref": "#/components/schemas/report.successRequestsSummary"
          },
          "requests-data": {
            "$ref": "#/components/schemas/report.requestsData"
          }
        }
      },
      "report.totalRequestsSummary": {
        "title": "total-summary",
        "type": "integer",
        "description": "Total number of requests for all records."
      },
      "report.successRequestsSummary": {
        "title": "success-summary",
        "type": "integer",
        "description": "Total number of successful requests for all records."
      },
      "report.requestsData": {
        "title": "requests-data",
        "type": "array",
        "description": "A container of <timestamp>, <total>, and <success> elements describing the request data for a specified period of time.",
        "items": {
          "type": "object",
          "properties": {
            "timestamp": {
              "$ref": "#/components/schemas/report.timestamp"
            },
            "total": {
              "$ref": "#/components/schemas/report.totalRequestsCount"
            },
            "success": {
              "$ref": "#/components/schemas/report.successRequestsCount"
            }
          }
        },
        "x-examples": {
          "example-1": [
            {
              "timestamp": "2014-07-31T23:05:00",
              "total": 200,
              "success": 200
            },
            {
              "timestamp": "2014-07-31T23:10:00",
              "total": 200,
              "success": 200
            },
            {
              "timestamp": "2014-07-31T23:15:00",
              "total": 100,
              "success": 100
            },
            {
              "timestamp": "2014-07-31T23:20:00",
              "total": 200,
              "success": 100
            },
            {
              "timestamp": "2014-07-31T23:25:00",
              "total": 200,
              "success": 200
            },
            {
              "timestamp": "2014-07-31T23:30:00",
              "total": 100,
              "success": 100
            }
          ]
        }
      },
      "report.totalRequestsCount": {
        "title": "total",
        "type": "integer",
        "description": "Total number of requests during the time period."
      },
      "report.successRequestsCount": {
        "title": "success",
        "type": "integer",
        "description": "Total number of successful requests during the time period."
      },
      "response.status": {
        "title": "status",
        "type": "integer",
        "x-examples": {
          "example-1": {}
        },
        "description": "0 or 1 to indicate whether response contains error or not. If 1, the request is handled successfully, and the expected result will be contained in 'content' field. Else the 'message' field will show the error details."
      },
      "response.message": {
        "title": "message",
        "type": "string",
        "description": "Shows the result or error message of the request."
      },
      "response.code": {
        "title": "response.code",
        "description": "Response code. When the request is failed, it will show the error code. When succeed, \"0\" will be returned.",
        "type": "string"
      },
      "transport.carryClientIp": {
        "type": "integer",
        "title": "carryClientIp",
        "description": "One of transport advanced configurations. Specify 0 or 1 to indicate whether carry client ip. 0: false, 1: TCP Option 0x4e, 2: Proxy Protocol v1, 3: Proxy Protocol v2.",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "default": 0
      },
      "transport.hasPsb": {
        "type": "integer",
        "title": "hasPSB",
        "description": "Indicates whether the access domain has PSB Beian in China. 0: false, 1: true.",
        "enum": [
          0,
          1
        ],
        "default": 0
      },
      "transport.ipVersion": {
        "type": "integer",
        "title": "ipVersion",
        "description": "Shows what IP version will be supported. 1: IPv4, 2: IPv6, 3: IPv4+IPv6.",
        "enum": [
          1,
          2,
          3
        ]
      },
      "transport.shieldHost": {
        "title": "shieldHost",
        "type": "string",
        "description": "Shield ip or domain"
      },
      "transport.transportStrategy": {
        "type": "string",
        "title": "transportStrategy",
        "description": "Transport strategy.\n\nIts value enumerations:\ntopspeed: Default,\ninteract: Interactive,\nhugeslow: High Concurrency,\ntopquick: High Real-time,\nuniform: Big File.\n\nDefault: Low cost and high efficiency.\nInteractive: For applications requiring better response times, HDT internal routing is enabled in this mode.\nHigh Concurrency: Suitable for small data transfers and high concurrency. Normally, concurrency is considered to be high when its value exceeds 1,000 connections and low when its value is below 100 connections.\nHigh Real-time: Suitable for applications delivering small data with low concurrency (fewer than 100 connections) and requiring optimized response times.\nBig File: For big file tranfer.",
        "enum": [
          "topspeed",
          "interact",
          "hugeslow",
          "topquick",
          "uniform"
        ]
      },
      "transport.dedicatedIpService": {
        "type": "integer",
        "title": "dedicatedIpService",
        "description": "Indicates whether to use dedicated IP Service, 1 means true while 0 means false. It can be set as true only when the application protocol of transport is other than 'http' or 'sni'.",
        "enum": [
          0,
          1
        ]
      },
      "transport.hasIcp": {
        "type": "integer",
        "title": "hasICP",
        "description": "Indicates whether the access domain has ICP Beian in China. 0: false, 1: true."
      },
      "transport.ipBlackList": {
        "title": "ipBlackList",
        "description": "IP address black-list. Valid values are IP address, IP address segment, IP address range, or the combination of them separated by semicolons. Spaces, tabs or line breaks can only appear in front of or behind IP address. The default value is a blank string.\nThe version of IP in this list should keep the same with the one specified in field 'ipVersion'. If the field 'ipVersion' is empty, then IPv4 should be used by default.\n\nFor example:\nvalid:\n 11.11.12.3/20; 2.3.4.5-2.3.4.10;\n21.12.45.18\n\nInvalid:\n 11.11. 12.3/20;  2.3.4.5-2.3.\n4.10;\n21.12.45.18",
        "type": "string"
      },
      "serviceQuota.serviceQuotaID": {
        "title": "serviceQuota.serviceQuotaID",
        "type": "string",
        "description": "ID of service quota."
      },
      "serviceQuota.customerID": {
        "title": "serviceQuota.customerID",
        "description": "ID of customer that the service quota is created for.",
        "type": "integer"
      },
      "serviceQuota.status": {
        "title": "serviceQuota.status",
        "type": "string",
        "description": "Status of a customer. Can be \"trial\", \"active\" or \"suspended\"."
      },
      "serviceQuota.trialDeadline": {
        "title": "serviceQuota.trialDeadline",
        "type": "string",
        "description": "Date-time in RFC 3339 format indicating when the trial expires, e.g., 2021-07-01T15:00:00Z."
      },
      "serviceQuota.billUsingStripe": {
        "title": "serviceQuota.billUsingStripe",
        "description": "A flag indicating whether this customer will be invoiced using Stripe.",
        "type": "integer"
      },
      "serviceQuota.contractID": {
        "title": "serviceQuota.contractID",
        "type": "string",
        "description": "ID of the contract signed for HDT service subscription."
      },
      "serviceQuota.contractStartDate": {
        "title": "serviceQuota.contractStartDate",
        "type": "string",
        "description": "The start date of a contract. A UTC date in \"yyyy-MM-dd\" format."
      },
      "serviceQuota.accountManagerEmail": {
        "title": "serviceQuota.accountManagerEmail",
        "type": "string",
        "description": "Email address of the account manager who manages the customer. The email address specified can be used by the account manager to receive system notifications, e.g. in the event of trial expiration, excessive usage and service suspension."
      },
      "serviceQuota.description": {
        "title": "serviceQuota.description",
        "type": "string",
        "description": "Any text about service quotas with a maximum length of 3000 characters."
      },
      "serviceQuota.creationTime": {
        "title": "serviceQuota.creationTime",
        "type": "string",
        "description": "Datetime when the service quota is created."
      },
      "serviceQuota.lastUpdateTime": {
        "title": "serviceQuota.lastUpdateTime",
        "type": "string",
        "description": "Datetime when the service quota is last updated."
      },
      "serviceQuota.upgradeDate": {
        "title": "serviceQuota.upgradeDate",
        "type": "string",
        "description": "Datetime indicating when the status is changed from \"trial\" to \"active\". This field is added by API server when a free trial customer upgrades to a paid customer."
      },
      "serviceQuota.suspensionDate": {
        "title": "serviceQuota.suspensionDate",
        "type": "string",
        "description": "Datetime indicating when the status is changed from \"trial\" or \"active\" to \"suspended\". "
      },
      "serviceQuota.resourceQuotas": {
        "title": "serviceQuota.resourceQuotas",
        "type": "object",
        "description": "Global resource quotas available to a customer.",
        "properties": {
          "transportsLimit": {
            "description": "The maximum number of available transports a user can have. 0 means no limit.",
            "type": "integer"
          },
          "trafficVolumeLimit": {
            "type": "integer",
            "description": "The maximum traffic volume in GB that a customer can transport. 0 means no limit."
          },
          "allowVirtualPrivateLine": {
            "type": "integer",
            "description": "If it is allowed to use virtual private line service, 0 is OFF and 1 is ON."
          },
          "allowDedicatedIPService": {
            "type": "integer",
            "description": "If dedicated-ip-services is supported. 0 is OFF and 1 is ON."
          },
          "allowRawLogDownload": {
            "type": "integer",
            "description": "If it is supported to download raw logs, 0 is OFF and 1 is ON."
          }
        },
        "required": [
          "transportsLimit",
          "trafficVolumeLimit"
        ]
      }
    },
    "parameters": {
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Authorization string for the request.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Date": {
        "name": "Date",
        "in": "header",
        "description": "The date and time of the request.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Content-Type": {
        "name": "Content-Type",
        "in": "header",
        "description": "The format of request data, supports \"application/json\" and \"application/xml\", default value is \"application/json\".",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Accept-Encoding": {
        "name": "Accept-Encoding",
        "in": "header",
        "description": "Compression format of response data, either \"gzip\" or \"uncompressed\". The default value is \"uncompressed\".",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "Accept": {
        "name": "Accept",
        "in": "header",
        "description": "Response format, either \"application/json\" or \"application/xml\". The default value is \"application/json\".",
        "schema": {
          "type": "string"
        }
      },
      "On-Behalf-Of": {
        "name": "On-Behalf-Of",
        "in": "header",
        "description": "If you are a reseller, you can use this header to specify the ID of a child customer and make an API call on its behalf.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "scope": {
        "name": "scope",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "vpl",
            "vpl-jp",
            "vpl-hk"
          ]
        },
        "description": "Indicates the report scope, can be \"all\", \"vpl\", “vpl-jp”, or \"vpl-hk\". If the parameter is unspecified, the report scope will be “all”."
      },
      "datefrom": {
        "name": "datefrom",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "RFC 3339 formatted date indicating the starting date. Example:  2013-01-01T22:30:00+08:00"
      },
      "dateto": {
        "name": "dateto",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "RFC 3339 formatted date indicating the ending date. Example:  2013-01-01T22:30:00+08:00. If the time range of datefrom and dateto is more than 366 days, it will return 'TimeRangeTooLarge' error."
      },
      "timezone": {
        "name": "timezone",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Timezone for the report data. It must be relative to UTC and specified in the format UTC+n where -12<= n <= 12.  For example, timezone=UTC-7 and timezone=UTC+8.  If the parameter is unspecified, the results will be in the UTC timezone. The default timezone is UTC+00."
      },
      "accessDomain": {
        "name": "accessDomain",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "An access domain or a list of access domains separated by commas."
      },
      "transport": {
        "name": "transport",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A transport id or a list of transport ids separated by comma"
      },
      "country": {
        "name": "country",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A filter, a customer ID or a list of customer IDs separated by comma."
      },
      "customerName": {
        "name": "customerName",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A filter, a customer name or a list of customer names separated by comma."
      },
      "customerId": {
        "name": "customerId",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A filter, a customer ID or a list of customer IDs separated by comma."
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "All requests to CDNetworks' platform must be authenticated using an API login name and key assigned to your organization. For security, the API key is not passed directly but is secured as described below. \n\nThe authentication type is HTTP Basic, and the authorization string is specified in the HTTP request header called Authorization.\n```\n#!/bin/bash\n#URL of the HDT API server\nAPI_SERVER=https://ngapi.cdnetworks.com\n\n#You will be given the following information by the CDNetworks sales team\nUSER=\"{API user name}\"\nAPI_KEY=\"{API key (make sure to escape the $ sign if any)}\"\n\n#Date in RFC 1123 format\nDATE=`date \"+%a, %d %b %Y %H:%M:%S %Z\"`\n\n#Generate the password. Raw output from openssl by adding the \"-binary\" flag\npassw=$(echo -n \"$DATE\" | openssl dgst -sha1 -hmac \"$API_KEY\" -binary | base64)\necho \" \"\n\n#Construct the curl command to query list of applications\napiCall =\"curl -i --url '${API_SERVER}/hdt/v1/applications'\n                  -X GET\n                  -u $USER:$passw\n                  -H 'Date: $DATE'\n                  -H 'Accept: application/json'\"\neval $apiCall\necho \" \"\n```\n If you are a reseller, you can also specify a child customer's ID in an On-Behalf-Of HTTP header to make API calls to manage your child customer."
      }
    },
    "responses": {}
  },
  "tags": [
    {
      "name": "Reports"
    },
    {
      "name": "ServiceQuotas"
    },
    {
      "name": "Transports"
    }
  ]
}